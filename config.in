
source scripts/usart-config.sh
mainmenu_name "Ethersex Configuration"


mainmenu_option next_comment
comment "General Setup"

bool 'Prompt for experimental code' CONFIG_EXPERIMENTAL

get_usart_count
choice 'Target MCU'			\
   "ATmega8                atmega8	\
    ATmega88               atmega88	\
    ATmega128               atmega128	\
    ATmega162              atmega162	\
    ATmega168              atmega168	\
    ATmega32		   atmega32	\
    ATmega64              atmega64	\
    ATmega644              atmega644	\
    ATmega644p             atmega644p"	\
   'ATmega644' MCU

int "MCU frequency" FREQ 20000000

choice 'Hardware/Periphery Class'	\
    "$(scripts/pinning_hardware_list.sh)" \
   'Etherrape' HARDWARE

bool "Build a bootloader"	BOOTLOADER_SUPPORT
bool "Teensy build"		TEENSY_SUPPORT
bool "Use SPI Timeout"		SPI_TIMEOUT
bool "Use GIT commit hash as Version" USE_GIT_VERSION
if [ "$USE_GIT_VERSION" = y ]; then 
  define_string VERSION_GIT "$(scripts/get-git-version)"
else 
  define_string VERSION_GIT ""
fi

dep_bool_menu "Enable (Serial-Line) Debugging" DEBUG y
  dep_bool 'Reroute to SYSLOG' DEBUG_USE_SYSLOG $SYSLOG_SUPPORT $DEBUG
  dep_bool 'Software Uart (Output only)' SOFT_UART_SUPPORT $DEBUG
  comment  '----- Debugging Flags -----'
  dep_bool 'ARTNET' DEBUG_ARTNET $DEBUG
  dep_bool 'ASK Sensing' DEBUG_ASK_SENSE $DEBUG $RFM12_ASK_SENSING_SUPPORT
  dep_bool 'ECMD' DEBUG_ECMD $DEBUG
  dep_bool 'ECMD Speed' DEBUG_ECMD_SPEED $DEBUG
  dep_bool 'ECMD FS20' DEBUG_ECMD_FS20 $DEBUG
  dep_bool 'ECMD IP' DEBUG_ECMD_IP $DEBUG
  dep_bool 'ECMD MAC' DEBUG_ECMD_MAC $DEBUG
  dep_bool 'ECMD NET' DEBUG_ECMD_NET $DEBUG
  dep_bool 'ECMD OW LIST' DEBUG_ECMD_OW_LIST $DEBUG
  dep_bool 'ECMD OW ROM' DEBUG_ECMD_OW_ROM $DEBUG
  dep_bool 'ECMD PORTIO' DEBUG_ECMD_PORTIO $DEBUG
  dep_bool 'ECMD RC5' DEBUG_ECMD_RC5 $DEBUG
  dep_bool 'ECMD SCRIPT' DEBUG_ECMD_SCRIPT $DEBUG $ECMD_SCRIPT_SUPPORT
  dep_bool 'ENC28J60' DEBUG_ENC28J60 $DEBUG
  dep_bool '  Interrupt' DEBUG_INTERRUPT $DEBUG_ENC28J60
  dep_bool '  Rev. 4 Workaround' DEBUG_REV4_WORKAROUND $DEBUG_ENC28J60
  dep_bool 'Dataflash File System' DEBUG_FS $DEBUG
  dep_bool '  Inode Table' DEBUG_FS_INODETABLE $DEBUG_FS
  dep_bool '  Mark' DEBUG_FS_MARK $DEBUG_FS
  dep_bool 'FS20 Receive' DEBUG_FS20_REC $DEBUG
  dep_bool 'VFS EEPROM' VFS_EEPROM_DEBUG_SUPPORT $DEBUG
  dep_bool 'FS20 Receive Queue' DEBUG_FS20_REC_QUEUE $DEBUG_FS20_REC
  dep_bool 'FS20 Receive Verbose' DEBUG_FS20_REC_VERBOSE $DEBUG_FS20_REC
  dep_bool 'FS20 WS300' DEBUG_FS20_WS300 $DEBUG
  dep_bool 'FS20 WS300 Verbose' DEBUG_FS20_WS300_VERBOSE $DEBUG_FS20_WS300
  dep_bool 'HD44780' DEBUG_HD44780 $DEBUG
  dep_bool 'PWM' DEBUG_PWM $DEBUG
  dep_bool 'PWM Servo' DEBUG_PWM_SERVO $DEBUG
  dep_bool 'MCUF' DEBUG_MCUF $DEBUG
  dep_bool 'I2C' DEBUG_I2C $DEBUG
  dep_bool 'IRC' DEBUG_IRC $DEBUG $IRC_SUPPORT
  dep_bool 'NETSTAT' DEBUG_NETSTAT $DEBUG $NETSTAT_SUPPORT
  dep_bool 'TWITTER' DEBUG_TWITTER $DEBUG $TWITTER_SUPPORT
  dep_bool 'Jabber' DEBUG_JABBER $DEBUG $JABBER_SUPPORT
  dep_bool 'HTTPD' DEBUG_HTTPD $DEBUG
  dep_bool 'LCD Menu' DEBUG_LCD_MENU $DEBUG $LCD_MENU_SUPPORT
  dep_bool 'MySQL' DEBUG_MYSQL $DEBUG $MYSQL_SUPPORT
  dep_bool 'Networking' DEBUG_NET $DEBUG
  dep_bool '  Config' DEBUG_NET_CONFIG $DEBUG_NET
  dep_bool '  IPv6' DEBUG_NET_IP6 $DEBUG
  dep_bool '  OpenVPN' DEBUG_OPENVPN $DEBUG
  dep_bool '  Router' DEBUG_ROUTER $DEBUG
  dep_bool '  uIP' DEBUG_UIP $DEBUG
  dep_bool '  NTP' DEBUG_NTP $DEBUG
  dep_bool '  Unknown packets' DEBUG_UNKNOWN_PACKETS $DEBUG_NET
  dep_bool "NTP Clock-Adjust" DEBUG_NTP_ADJUST $CLOCK_NTP_ADJUST_SUPPORT $DEBUG
  dep_bool 'RC5' DEBUG_RC5 $DEBUG
  dep_bool 'Stella' DEBUG_STELLA $DEBUG
  dep_bool 'SD-Reader' DEBUG_SD_READER $DEBUG
  dep_bool 'Sendmail' DEBUG_SENDMAIL $DEBUG
  dep_bool 'TTY Layer' DEBUG_TTY_LAYER $DEBUG
  dep_bool 'UPnP' DEBUG_UPNP $DEBUG $UPNP_SUPPORT
  dep_bool 'Cron' DEBUG_CRON $DEBUG
  dep_bool 'DCF77' DEBUG_DCF77 $DEBUG
  dep_bool 'Hooks' DEBUG_HOOK $DEBUG
  dep_bool 'LDAP Auth' DEBUG_LDAP_AUTH $DEBUG
  bool 'Discard some of the received packets' DEBUG_DISCARD_SOME
endmenu

dep_bool_menu "Status LEDs" STATUSLEDS
	bool "Status LED (Power)"	STATUSLED_POWER_SUPPORT
	bool "Status LED (Booted)"	STATUSLED_BOOTED_SUPPORT
	bool "Status LED (Net link)"	STATUSLED_NETLINK_SUPPORT
	bool "Status LED (Transmitted TX)"	STATUSLED_TX_SUPPORT
	bool "Status LED (Received RX)"	STATUSLED_RX_SUPPORT
endmenu

source core/crypto/config.in
source core/vfs/config.in
source protocols/usb/config.in

source control6/config.in

string "Hostname" CONF_HOSTNAME "ethersex"

comment "Network interfaces"
source hardware/ethernet/config.in
source hardware/radio/rfm12/config.in

usart_count_used
if [ "$ZBUS_SUPPORT" = y -o $USARTS -gt $USARTS_USED ]; then
	source protocols/zbus/config.in
fi

source protocols/usb/usb-net-config.in

source scripts/ip-router-conf.sh

comment "IP configuration"
dep_bool 'IPv6 support'		IPV6_SUPPORT $UIP_SUPPORT
if [ "$IPV6_SUPPORT" = "y" ]; then
  define_bool IPV4_SUPPORT n
else
  define_bool IPV4_SUPPORT $UIP_SUPPORT
fi

dep_bool 'Enable IP forwarding' IP_FORWARDING_SUPPORT $ROUTER_SUPPORT

dep_bool 'Enable TCP inactivity timeout' UIP_TIMEOUT_SUPPORT $UIP_SUPPORT
if [ "$UIP_TIMEOUT_SUPPORT" = "y" ]; then
  int "  TCP inactivity timeout (in minutes)" UIP_TIMEOUT_COUNT 10
fi

if [ "$IPV6_STATIC_SUPPORT" = "y" ]; then
  ipv6 "Default Router" CONF_ETHERRAPE_GATEWAY "2001:6f8:1209:f0::1"
elif [ "$IPV4_SUPPORT" = "y" -a "$BOOTP_SUPPORT" != "y" ]; then
  ipv4 "Default gateway" CONF_ETHERRAPE_GATEWAY "192.168.23.1"
fi

define_bool UIP_MULTI_STACK $ROUTER_SUPPORT
source protocols/uip/ipchair/config.in

endmenu

source protocols/uip/config.in

###############################################################################

mainmenu_option next_comment
comment "I/O support"

choice "I/O abstraction model (Port I/O)" \
	"None					CONFIG_IO_NONE		\
	 Simple				PORTIO_SIMPLE_SUPPORT	\
	 Full-featured			PORTIO_SUPPORT"		\
	Simple
dep_bool "HC595 output expansion" HC595_SUPPORT $CONFIG_EXPERIMENTAL $PORTIO_SUPPORT
if [ "$HC595_SUPPORT" = "y" ]; then
  int "Number of HC595 registers" HC595_REGISTERS 5
fi
dep_bool_menu "HC165 input expansion  (EXPERIMENTAL)" HC165_SUPPORT $CONFIG_EXPERIMENTAL $PORTIO_SUPPORT
  dep_bool "Inverse output" HC165_INVERSE_OUTPUT $HC165_SUPPORT
  if [ "$HC165_SUPPORT" = "y" ]; then
    int "Number of HC165 registers" HC165_REGISTERS 1
  fi
endmenu
dep_bool "PS/2 keyboard" PS2_SUPPORT $CONFIG_EXPERIMENTAL
dep_bool "PS/2: Use German layout" PS2_GERMAN_LAYOUT $PS2_SUPPORT
source hardware/lcd/config.in
source core/tty/config.in
dep_bool "ADC input" ADC_SUPPORT $ECMD_PARSER_SUPPORT
if [ "$ADC_SUPPORT" = "y" ]; then
  if [ "$KTY_SUPPORT" = "y" ]; then
    define_symbol ADC_REF ADC_AREF
  else
    choice 'ADC Reference'		\
     "ARef               CONFIG_ADC_AREF	\
      AVcc               CONFIG_ADC_AVCC	\
      Internal_1.1V      CONFIG_ADC_1_1	        \
      Internal_2.56V	 CONFIG_ADC_2_56"	\
     'ARef'
     if [ "$CONFIG_ADC_AREF" = "y" ]; then
       define_symbol ADC_REF ADC_AREF
     elif [ "$CONFIG_ADC_AVCC" = "y" ]; then
       define_symbol ADC_REF ADC_AVCC
     elif [ "$CONFIG_ADC_1_1" = "y" ]; then
       define_symbol ADC_REF ADC_1_1
     else
       define_symbol ADC_REF ADC_2_56
     fi
  fi
fi
source hardware/adc/kty/config.in
bool "Onewire support" ONEWIRE_SUPPORT
dep_bool "  Onewire device detection support" ONEWIRE_DETECT_SUPPORT $ONEWIRE_SUPPORT
dep_bool "  Onewire DS2502 (eeprom) support" ONEWIRE_DS2502_SUPPORT $ONEWIRE_SUPPORT

dep_bool_editor "Named and logic state I/O" NAMED_PIN_SUPPORT "$NP_CONFIG"
source hardware/i2c/master/config.in
source hardware/camera/config.in

source hardware/radio/fs20/config.in

dep_bool "Send RC5 IR-codes" RC5_SUPPORT $CONFIG_EXPERIMENTAL

source hardware/pwm/config.in

dep_bool_menu "Game Input" GAME_INPUT_SUPPORT $CONFIG_EXPERIMENTAL
  dep_bool "Digital Joystick" JOYSTICK_DIGITAL_SUPPORT $GAME_INPUT_SUPPORT $CONFIG_EXPERIMENTAL
endmenu
source hardware/input/buttons/config.in

source mcuf/config.in

usart_count_used
comment "Usart Configuration ($USARTS_USED/$USARTS)"
source mcuf/config_usart.in
source protocols/modbus/config.in
source protocols/dmx/config.in
source protocols/yport/config.in

if [ "$ECMD_SERIAL_USART_SUPPORT" = y -o $USARTS -gt $USARTS_USED ]; then
  dep_bool "Usart ecmd interface (RS232)" ECMD_SERIAL_USART_SUPPORT $ECMD_PARSER_SUPPORT
  if [ "$ECMD_SERIAL_USART_SUPPORT" = y ]; then
    choice '  Ecmd usart select' "$(usart_choice ECMD_SERIAL_USART)"
    usart_process_choice ECMD_SERIAL_USART
  fi
  dep_bool "  Usart ecmd RS485 mode" ECMD_SERIAL_USART_RS485_SUPPORT $ECMD_SERIAL_USART_SUPPORT
fi

endmenu

###############################################################################

mainmenu_option next_comment
comment "Applications"

source services/clock/config.in
source protocols/ecmd/config.in
source services/httpd/config.in
source protocols/mdns_sd/config.in
source services/echo/config.in
source services/dyndns/config.in
source services/watchcat/config.in
source protocols/snmp/config.in
source protocols/smtp/config.in
source protocols/artnet/config.in
source services/stella/config.in
source hardware/radio/rfm12/rfm12_ask-config.in
source protocols/mysql/config.in
source protocols/irc/config.in
source protocols/twitter/config.in
source protocols/netstat/config.in
source services/upnp/config.in
source protocols/ldap_auth/config.in

endmenu

###############################################################################

if [ "$ZBUS_SUPPORT" = "y"		\
	-o "$YPORT_SUPPORT" = "y"	\
	-o "$MODBUS_SUPPORT" = "y" ]; then
  define_bool USART_SUPPORT y
fi

if [ "$RFM12_IP_SUPPORT" = "y" -o "$RFM12_ASK_SUPPORT" = "y" ]; then
  define_bool RFM12_SUPPORT y
else
  define_bool RFM12_SUPPORT n
fi

if [ "$UIP_SUPPORT" = "y" -a "$IPV6_SUPPORT" != "y" ]; then
  define_bool IPV4_SUPPORT y
fi
